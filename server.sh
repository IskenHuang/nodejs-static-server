#!/bin/bash

# nodejs static server
port="${1:-3000}"
open "http://localhost:${port}/"
echo "Static file server running at => http://localhost:${port}"
echo "CTRL + C to shutdown"
node -e 'var http=require("http"),url=require("url"),path=require("path"),fs=require("fs"),port=process.argv[2]||3e3,backName="<<",log=function(e,r){var n=200===r?"\x1b[32m":"\x1b[31m";console.log("\x1b[36m",e.method,n,r,"\x1b[0m",e.url)},errorResponse=function(e,r,n,t){var o={"Content-Type":"text/plain"},a=404===e?"404 Not Found\n":t+"\n";log(r,e),n.writeHead(e,o),n.write(a),n.end()},normalResponse=function(e,r,n,t){var o={"Access-Control-Allow-Origin":"*"};log(e,200),r.writeHead(200,o),r.write(n,t),r.end()};http.createServer(function(e,r){var n=url.parse(e.url).pathname,t=path.join(process.cwd(),n);fs.exists(t,function(n){if(!n)return void errorResponse(404,e,r);var o=fs.statSync(t).isDirectory();o?fs.readdir(t,function(n,o){if(n)return errorResponse(500,e,r,n);var a="<html><head><style>body{margin:0;}.content{list-style:none;padding:10px;}.row{height:30px;line-height:30px}.row:hover{background-color:#f1f1f1}</style></head><body><ul class=\"content\">",s=function(r,n){n=n||r;var t="<li class=\"row\">";return t+="<a href=\""+e.url+n+"\">",t+=r,t+="</a></li>"};a+="/"===e.url?"":s(backName,"..");for(var i=0;i<o.length;i++){var l=o[i];l+=fs.statSync(t+l).isDirectory()?"/":"",a+=s(l)}return a+="</ul></body></html>",normalResponse(e,r,a)}):fs.readFile(t,"binary",function(n,o){if(n)return errorResponse(500,e,r,n);var a=1048576;if(o.length<=a)return normalResponse(e,r,o,"binary");var s=fs.createReadStream(t,{flags:"r",encoding:"utf8",fd:null,mode:438,autoClose:!0});s.on("open",function(){var e=path.basename(t);r.setHeader("Content-disposition","attachment; filename="+e),s.pipe(r)}),s.on("error",function(n){errorResponse(500,e,r,n)})})})}).listen(parseInt(port,10)),console.log("Static file server running at => http://localhost:"+port+"/\nCTRL + C to shutdown");' "$port"
